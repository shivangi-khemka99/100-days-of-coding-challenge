"Efficient Length of Last Word Calculation Using String Manipulation"

Leetcode solution link: https://leetcode.com/problems/length-of-last-word/solutions/4677077/efficient-length-of-last-word-calculation-using-string-manipulation/

# Intuition
<!-- Describe your first thoughts on how to solve this problem. -->
The problem involves finding the length of the last word in a given string. The intuition is to trim trailing spaces, identify the last space character, and calculate the length of the last word.

# Approach
<!-- Describe your approach to solving the problem. -->
The approach is to use string manipulation functions to achieve the desired result. The rstrip() function trims trailing spaces, and rfind() finds the index of the last space character. The length of the last word is then calculated using these indices.

# Complexity
Time complexity: O(N), where N is the length of the string s. The rstrip() and rfind() operations both have a time complexity of O(N) in the worst case.

Space complexity: O(1), as the solution uses a constant amount of extra space regardless of the input size. The operations performed do not require additional space proportional to the input size.

# Code
```
class Solution:
    def lengthOfLastWord(self, s: str) -> int:
        s = s.rstrip()
        last_space = s.rfind(' ')
        return len(s) - last_space - 1 if last_space != -1 else len(s)
        #O(N)
```